from app import app, db
from datetime import datetime
import constants as TICKET

ticket_replies = db.Table('ticket_replies', db.Model.metadata,
    db.Column('ticket_id', db.Integer, db.ForeignKey('ecwidb_tickets.id')),
    db.Column('reply_id', db.Integer, db.ForeignKey('ecwidb_replies.id'))
)

def add_token(uid, secret):
    token = Token.query.get(uid)
    if token:
        token.secret = secret
    else:
        token = Token(uid, secret)
        db.session.add(token)
    db.session.commit()

def add_ticket(owner, title, issue):
    t = Ticket(owner, title, issue)
    db.session.add(t)
    db.session.commit()

def add_reply(ticket_id, author, message):
    t = Ticket.query.get(ticket_id)
    if t:
        r = Reply(author, message)
        t.replies.append(r)
        db.session.commit()


class Token(db.Model):
    __tablename__ = 'ecwidb_tokens'

    uid = db.Column(db.Integer, primary_key=True)
    secret = db.Column(db.String(64))

    def __init__(self, uid, secret):
        self.uid = uid
        self.secret = secret

    @property
    def serialize(self):
        return {
            'uid': self.uid,
            'secret': self.secret
        }


class Ticket(db.Model):
    __tablename__ = 'ecwidb_tickets'

    id = db.Column(db.Integer, primary_key=True)
    replies = db.relationship("Reply", secondary=ticket_replies)
    timestamp = db.Column(db.DateTime, default=datetime.now)
    owner = db.Column(db.Integer)
    title = db.Column(db.String(128))
    issue = db.Column(db.String(4096))
    status = db.Column(db.Integer, default=TICKET.NEW)

    def __init__(self, owner, title, issue):
        self.owner = owner
        self.title = title
        self.issue = issue

    def getStatus(self):
        return TICKET.status[self.status]

    def getTimestamp(self):
        return self.timestamp.strftime('%H:%M, %d-%b-%y')

    @property
    def serialize(self):
        return {
            'id': self.id,
            'owner': self.owner,
            'title': self.title,
            'issue': self.issue,
            'status': self.getStatus(),
            'timestamp': self.getTimestamp(),
            'replies': [r.serialize for r in self.replies]
        }

    @property
    def summary(self):
        return {
            'id': self.id,
            'title': self.title,
            'status': self.getStatus(),
            'timestamp': self.getTimestamp()
        }


class Reply(db.Model):
    __tablename__ = 'ecwidb_replies'

    id = db.Column(db.Integer, primary_key=True)
    author = db.Column(db.String(128))
    message = db.Column(db.String(4096))
    timestamp = db.Column(db.DateTime, default=datetime.now)

    def __init__(self, author, message):
        self.author = author
        self.message = message

    def getTimestamp(self):
        return self.timestamp.strftime('%H:%M, %d-%b-%y')

    @property
    def serialize(self):
        return {
            'author': self.author,
            'message': self.message,
            'timestamp': self.getTimestamp()
        }


