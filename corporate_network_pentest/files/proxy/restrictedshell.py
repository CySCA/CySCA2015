#!/usr/bin/env python
import sys
from socket import gethostname
import os
import re

banner = """                            _____ _                 _
                           / ____| |               | |
                          | |    | | ___  _   _  __| |
                          | |    | |/ _ \| | | |/ _` |
                          | |____| | (_) | |_| | (_| |
                           \_____|_|\___/ \__,_|\__,_|
               __  __ _     _     _ _
              |  \/  (_)   | |   | | |
              | \  / |_  __| | __| | | _____      ____ _ _ __ ___
              | |\/| | |/ _` |/ _` | |/ _ \ \ /\ / / _` | '__/ _ \\
              | |  | | | (_| | (_| | |  __/\ V  V / (_| | | |  __/
              |_|  |_|_|\__,_|\__,_|_|\___| \_/\_/ \__,_|_|  \___|
                   _____
                   |  __ \\
                   | |  | | __ _  ___ _ __ ___   ___  _ __
                   | |  | |/ _` |/ _ \ '_ ` _ \ / _ \| '_ \\
                   | |__| | (_| |  __/ | | | | | (_) | | | |
                   |_____/ \__,_|\___|_| |_| |_|\___/|_| |_|
                                        \033[0;31;40mBY SYNERGISED CYBER CLOUD PTY. LTD.
"""

cmds = (('help','Prints available commands. i.e this message'),
('ping <HOST>','Pings a given host'),
('squidstatus <DETAIL>','Display Squid Status. DETAIL:1=full, 0=minimal'),
('hello <NAME>', 'Say hello'),
('quit', 'Exit and disconnect'),
('exit', 'Exit and disconnect'),
('hostname', 'Gets the cloud proxies hostname'))


def printcmds():
    cmdcol = "\033[1;35;40m"
    desccol = "\033[0;36;40m"
    printline("\033[0;37;40mAvailable Commands\033[0;34;40m",True)

    for (cmd,desc) in cmds:
        printline(cmdcol+cmd+" - "+desccol+desc,True)

    printdashedline()

def help():
    print "Commands are:"

def get_and_validate_token():
    try:
        supplied_token = prompt("Please enter your authentication token")
    except:
        print ""
        printerror("GOODBYE!")
        sys.exit(0)

    return auth_token_match(supplied_token)

def auth_token_match(suppliedtoken):
    try:
        token_file = open("/var/www/internal/console_auth_info.txt","rb")
        #Read the first line (that is the token)
        actualtoken = token_file.readline()
        token_file.close()
        if actualtoken.strip() == suppliedtoken.strip():
            return True
    except:
        print "There was an error. Please contact EXCON"
        return False

    return False

def printsolidline():
    printline("\033[7;34;40m" + " "*80)

def printdashedline():
    printline("\033[0;34;40m" + "-"*80)

def stripec(text):
    #Thanks to http://stackoverflow.com/questions/2186919/getting-correct-string-length-in-python-for-strings-with-ansi-color-codes
    regex = re.compile("\x1b\[[;\d]*[A-Za-z]",re.VERBOSE)
    stripped = regex.sub("", text)
    return stripped

def prompt(prompttext,dashed=False):
    pre = "\033[7;34;40m \033[0;37;40m"
    promptcol = "\033[0;33;40m"
    printline(promptcol+prompttext,center=True)
    sys.stdout.write(pre+" > ")
    answer = raw_input()
    if dashed:
        printdashedline()
    else:
        printsolidline()

    return answer

def printline(text, center=False):
    pre = "\033[7;34;40m \033[0;34;40m"
    suf = "\033[7;34;40m \033[0m"
    stripped = stripec(text)
    compensate = len(text)-len(stripped)
    if center == False:
        output = pre+text.ljust(80+compensate)+suf
    else:
        output = pre+text.center(80+compensate)+suf

    print output

def printbanner():
    printsolidline()
    for line in banner.split('\n'):
        printline(line)

    printline("\033[1;32;40mCloud Middleware Daemon v0.31 - \033[0;37;40mINtranet Jailed Enterprise Command Terminal",center=True)
    printsolidline()

def printerror(errortext,dashed=False):
    printline("\033[0;30;41m"+errortext+"\33[0;34;40m",center=True)
    if dashed:
        printdashedline()
    else:
        printsolidline()

def printsuccess(successtext):
    printline("\033[0;30;42m"+successtext+"\33[0;34;40m",center=True)
    printsolidline()

def printoutput(text):
    printline("\033[0;37;40m"+text+"\33[0;34;40m",center=True)
    printdashedline()

def extract_arg(cmd_line):
    argindex = cmd_line.find(" ")
    if argindex == -1:
        return None

    arg = cmd_line[argindex+1:]
    return arg.strip()

printbanner()

if get_and_validate_token() == False:
    printerror("ERROR BAD AUTH TOKEN. SEE MGMT WEB INTERFACE")
    sys.exit(0)

printsuccess("AUTH KEY VALID. WELCOME")
printcmds()
while True:
    try:
        cmd_line = prompt("Please enter your command",dashed=True)
        cmd = cmd_line.lower().strip()
        if cmd == "help":
            printcmds()
        elif cmd == "quit" or cmd == "exit":
            printerror("GOODBYE!")
            sys.exit(0)
        elif cmd == "hostname":
            printoutput("You are currently connected to: "+gethostname())
        elif cmd.startswith("hello"):
            name = extract_arg(cmd)
            if name:
                printoutput("Hello, "+name)
            else:
                printoutput("Hello, world?")
        elif cmd.startswith("ping") == True:
            hostname = extract_arg(cmd)
            if hostname:
                if ";" not in hostname:
                    os.system("ping %s" % hostname)
                else:
                    printerror("INVALID HOST",dashed=True)
            else:
                printerror("ERROR NO HOST",dashed=True)
        elif cmd.startswith("squidstatus") == True:
            arg_id = extract_arg(cmd)
            if arg_id:
                if arg_id == '0':
                    os.system("echo \"`ps -A | grep squid3 | wc -l` instances of squid running\"")
                elif arg_id == '1':
                    os.system("ps -A | grep squid3")
                else:
                    printerror("INVALID DETAIL",dashed=True)
            else:
                printerror("MISSING DETAIL",dashed=True)
        else:
            printerror("ERROR BAD COMMAND",dashed=True)
    except KeyboardInterrupt:
        print ""
        printerror("GOODBYE!")
        sys.exit(0)



