<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<!-- saved from url=(0057)http://www.catb.org/esr/faqs/hacker-howto.html -->
<!--?xml version="1.0" encoding="UTF-8"?--><!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><HTML 
xmlns="http://www.w3.org/1999/xhtml"><HEAD><META content="IE=10.000" 
http-equiv="X-UA-Compatible">

<META description="You too can transcend wannabe status">
<META http-equiv="Content-Type" content="text/html; charset=UTF-8"><TITLE>How To 
Become A Hacker</TITLE><LINK href="How%20To%20Become%20A%20Hacker_files/hacker-howto.css" 
rel="stylesheet" type="text/css">
<META name="GENERATOR" content="MSHTML 10.00.9200.16521"></HEAD>
<BODY>
<DIV class="article">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title"><A id="idp58700544"></A>How To Become A Hacker</H2></DIV>
<DIV>
<DIV class="author">
<H3 class="author"><SPAN class="firstname">Eric</SPAN> <SPAN 
class="othername">Steven</SPAN> <SPAN class="surname">Raymond</SPAN></H3>
<DIV class="affiliation"><SPAN class="orgname"><A class="ulink" href="http://catb.org/~esr/" 
target="_top">    Thyrsus Enterprises</A><BR></SPAN>
<DIV class="address">
<P><BR>&nbsp;&nbsp;&nbsp;&nbsp;<CODE class="email">&lt;<A class="email" href="mailto:esr@thyrsus.com">esr@thyrsus.com</A>&gt;</CODE><BR>
&nbsp;&nbsp;&nbsp;&nbsp;</P></DIV></DIV></DIV></DIV>
<DIV>
<P class="copyright">Copyright © 2001 Eric S. Raymond</P></DIV>
<DIV>
<DIV class="revhistory">
<TABLE style="border-style: solid; width: 100%;" summary="Revision History">
  <TBODY>
  <TR>
    <TH align="left" valign="top" colspan="3"><STRONG>Revision 
    History</STRONG></TH></TR>
  <TR>
    <TD align="left">Revision 1.50</TD>
    <TD align="left">19 July 2015</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Added link to "Let's Go Larval".     
        </TD></TR>
  <TR>
    <TD align="left">Revision 1.49</TD>
    <TD align="left">21 November 2014</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Added link to "How To Learn 
      Hacking".       </TD></TR>
  <TR>
    <TD align="left">Revision 1.48</TD>
    <TD align="left">19 June 2014</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         freshmeat/freecode is dead, alas.    
         </TD></TR>
  <TR>
    <TD align="left">Revision 1.47</TD>
    <TD align="left">20 May 2014</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Fix up various stale links.  Join a 
      hackerspace!       </TD></TR>
  <TR>
    <TD align="left">Revision 1.46</TD>
    <TD align="left">25 Sep 2013</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Add micropatronage explanation and 
      gittip link. 	 Why you should not ask me for advice on how to get started. 
            </TD></TR>
  <TR>
    <TD align="left">Revision 1.45</TD>
    <TD align="left">12 May 2013</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Open Solaris isn't, and Unity 
      screwed the pooch.       </TD></TR>
  <TR>
    <TD align="left">Revision 1.44</TD>
    <TD align="left">20 May 2012</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Updated the critique of Java.       
    </TD></TR>
  <TR>
    <TD align="left">Revision 1.43</TD>
    <TD align="left">07 Feb 2011</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Python passed Perl in popularity in 
      2010.       </TD></TR>
  <TR>
    <TD align="left">Revision 1.42</TD>
    <TD align="left">22 Oct 2010</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Added "Historical note".       
</TD></TR>
  <TR>
    <TD align="left">Revision 1.40</TD>
    <TD align="left">3 Nov 2008</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Link fixes.       </TD></TR>
  <TR>
    <TD align="left">Revision 1.39</TD>
    <TD align="left">14 Aug 2008</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Link fixes.       </TD></TR>
  <TR>
    <TD align="left">Revision 1.38</TD>
    <TD align="left">8 Jan 2008</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Deprecate Java as a language to 
      learn early.       </TD></TR>
  <TR>
    <TD align="left">Revision 1.37</TD>
    <TD align="left">4 Oct 2007</TD>
    <TD align="left">esr</TD></TR>
  <TR>
    <TD align="left" colspan="3">         Recommend Ubuntu as a Unix distro 
      for newbies.        </TD></TR></TBODY></TABLE></DIV></DIV></DIV>
<HR>
</DIV>
<DIV class="toc">
<P><STRONG>Table of Contents</STRONG></P>
<DL class="toc">
  <DT><SPAN class="sect1"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#why_this">Why 
  This Document?</A></SPAN></DT>
  <DT><SPAN class="sect1"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#what_is">What 
  Is a Hacker?</A></SPAN></DT>
  <DT><SPAN class="sect1"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#attitude">The 
  Hacker Attitude</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#believe1">1. 
    The world is full of fascinating problems waiting to be 
    solved.</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#believe2">2. 
    No problem should ever have to be solved twice.</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#believe3">3. 
    Boredom and drudgery are evil.</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#believe4">4. 
    Freedom is good.</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#believe5">5. 
    Attitude is no substitute for competence.</A></SPAN></DT></DL></DD>
  <DT><SPAN class="sect1"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#basic_skills">Basic 
  Hacking Skills</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#skills1">1. 
    Learn how to program.</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#skills2">2. 
    Get one of the open-source Unixes and learn to use and run 
    it.</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#skills3">3. 
    Learn how to use the World Wide Web and write HTML.</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#skills4">4. 
    If you don't have functional English, learn it.</A></SPAN></DT></DL></DD>
  <DT><SPAN class="sect1"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#status">Status 
  in the Hacker Culture</A></SPAN></DT>
  <DD>
  <DL>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#respect1">1. 
    Write open-source software</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#respect2">2. 
    Help test and debug open-source software</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#respect3">3. 
    Publish useful information</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#respect4">4. 
    Help keep the infrastructure working</A></SPAN></DT>
    <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#respect5">5. 
    Serve the hacker culture itself</A></SPAN></DT></DL></DD>
  <DT><SPAN class="sect1"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#nerd_connection">The 
  Hacker/Nerd Connection</A></SPAN></DT>
  <DT><SPAN class="sect1"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#style">Points 
  For Style</A></SPAN></DT>
  <DT><SPAN class="sect1"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#history">Historical 
  Note: Hacking, Open Source, and Free Software</A></SPAN></DT>
  <DT><SPAN class="sect1"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#resources">Other 
  Resources</A></SPAN></DT>
  <DT><SPAN class="sect1"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#FAQ">Frequently 
  Asked Questions</A></SPAN></DT></DL></DIV>
<DIV class="mediaobject"><IMG src="How%20To%20Become%20A%20Hacker_files/glider.png"></DIV>
<DIV class="sect1">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title" style="clear: both;"><A id="why_this"></A>Why This 
Document?</H2></DIV></DIV></DIV>
<P>As editor of the <A class="ulink" href="http://www.catb.org/jargon" target="_top">Jargon
 File</A> and author of a few other well-known documents of similar nature, I 
often get email requests from enthusiastic network newbies asking (in effect) 
"how can I learn to be a wizardly hacker?". Back in 1996 I noticed that there 
didn't seem to be any other FAQs or web documents that addressed this vital 
question, so I started this one.  A lot of hackers now consider it definitive, 
and I  suppose that means it is. Still, I don't claim to be the exclusive
 authority on this topic; if you don't like what you read here, write your 
own.</P>
<P>If you are reading a snapshot of this document offline, the current version 
lives at <A class="ulink" href="http://catb.org/~esr/faqs/hacker-howto.html" 
target="_top">http://catb.org/~esr/faqs/hacker-howto.html</A>.</P>
<P>Note: there is a list of <A title="Frequently Asked Questions" class="link" 
href="http://www.catb.org/esr/faqs/hacker-howto.html#FAQ">Frequently Asked
 Questions</A> at the end of this document.  Please read these—twice—before 
mailing me any questions about this document.</P>
<P>Numerous translations of this document are available: <A class="ulink" href="http://www.abdulibrahim.com/%D9%83%D9%8A%D9%81-%D8%AA%D8%B5%D8%A8%D8%AD-%D9%87%D8%A7%D9%83%D8%B1/" 
target="_top">Arabic</A> <A class="ulink" href="http://moneyaisle.com/worldwide/how-to-become-a-hacker-be" 
target="_top">Belorussian</A> <A class="ulink" href="http://zer4tul.github.io/docs/hacker-howto.html#hacker-howto" 
target="_top">Chinese</A>, <A class="ulink" href="http://www.olemichaelsen.dk/hacker-howto.html" 
target="_top">Danish</A>, <A class="ulink" href="http://www.knudde.be/index.php?page_name=hacker_howto" 
target="_top">Dutch</A>, <A class="ulink" href="http://www.kakupesa.net/hacker/" 
target="_top">Estonian</A>, <A class="ulink" href="http://thomasgil.com/hacker.html" 
target="_top">French</A> <A class="ulink" href="http://www.linuxtaskforce.de/hacker-howto-ger.html" 
target="_top">German</A>, <A class="ulink" href="http://users.otenet.gr/~indy90/hacker-howto-gr/" 
target="_top">Greek</A> <A class="ulink" href="http://www.victorfleur.com/documents/hacker.html" 
target="_top">Italian</A> <A class="ulink" href="http://he.wikisource.org/wiki/%D7%90%D7%99%D7%9A_%D7%9C%D7%94%D7%99%D7%95%D7%AA_%D7%94%D7%90%D7%A7%D7%A8" 
target="_top">Hebrew</A>, <A class="ulink" href="http://cruel.org/freeware/hacker.html" 
target="_top">Japanese</A>, <A class="ulink" href="http://rtfb.lt/hacker-howto-lt.html" 
target="_top">Lithuanian</A>, <A class="ulink" href="http://stian.atlantiscrew.net/doc/hacker-howto.html" 
target="_top">Norwegian</A>, <A class="ulink" href="http://ashiyane.org/forums/showthread.php?t=20570" 
target="_top">Persian</A> <A class="ulink" href="http://jvdm.sdf.org/pt/raquer-howto" 
target="_top">Portuguese (Brazilian)</A>, <A class="ulink" href="http://garaj.xhost.ro/hacker-howto/hacker-howto.ro.htm" 
target="_top">Romanian</A> <A class="ulink" href="http://www.sindominio.net/biblioweb/telematica/hacker-como.html" 
target="_top">Spanish</A>, <A class="ulink" href="http://www.belgeler.org/howto/hacker-howto/hacker-howto.html" 
target="_top">Turkish</A>, and <A class="ulink" href="http://www1.tripnet.se/~mly/open/faqs/hacker-howto.se.html" 
target="_top">Swedish</A>. Note that since this document changes occasionally, 
they may be out of date to varying degrees. </P>
<P>The five-dots-in-nine-squares diagram that decorates this document is called 
a <SPAN class="emphasis"><EM>glider</EM></SPAN>.  It is a simple pattern with 
some surprising properties in a mathematical simulation called <A class="ulink" 
href="http://dmoz.org/Computers/Artificial_Life/Cellular_Automata/" target="_top">Life</A> 
that has fascinated hackers for many years.  I think it makes a good visual 
emblem for what hackers are like — abstract, at first a bit mysterious-seeming, 
but a gateway to a whole world with an intricate logic of its own. Read more 
about the glider emblem <A class="ulink" href="http://www.catb.org/~esr/hacker-emblem/" 
target="_top">here</A>.</P>
<P>If you find this document valuable, please <A class="ulink" href="http://patreon.com/esr" 
target="_top">support me on Patreon</A>. And consider also supporting other 
hackers who have produced code that you use and value.  Lots of small but 
continuing donations add up quickly, and can free the people who have given you 
gifts of their labor to create more value.</P></DIV>
<DIV class="sect1">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title" style="clear: both;"><A id="what_is"></A>What Is a 
Hacker?</H2></DIV></DIV></DIV>
<P>The <A class="ulink" href="http://www.catb.org/jargon" target="_top">Jargon
 File</A> contains a bunch of definitions of the term ‘hacker’, most having to 
do with technical adeptness and a delight in solving problems and overcoming 
limits.  If you want to know how to <SPAN 
class="emphasis"><EM>become</EM></SPAN> a hacker, though, only two are really
 relevant.</P>
<P>There is a community, a shared culture, of expert programmers and networking 
wizards that traces its history back through decades to the first time-sharing 
minicomputers and the earliest ARPAnet experiments.  The members of this culture 
originated the term ‘hacker’.  Hackers built the Internet.  Hackers made the
 Unix operating system what it is today. Hackers make the World Wide Web work.  
If you are part of this culture, if you have contributed to it and other people 
in it know who you are and call you a hacker, you're a hacker.</P>
<P>The hacker mind-set is not confined to this software-hacker culture.  There 
are people who apply the hacker attitude to other things, like electronics or 
music — actually, you can find it at the highest levels of any science or art.  
Software hackers recognize these kindred spirits elsewhere and may call them 
‘hackers’ too — and some claim that the hacker nature is really independent of 
the particular medium the hacker works in.  But in the rest of this document we 
will focus on the skills and attitudes of software hackers, and the traditions 
of the shared culture that originated the term ‘hacker’.</P>
<P>There is another group of people who loudly call themselves hackers, but 
aren't.  These are people (mainly adolescent males) who get a kick out of 
breaking into computers and phreaking the phone system.  Real hackers call these 
people ‘crackers’ and want nothing to do with them.  Real hackers mostly think 
crackers are lazy, irresponsible, and not very bright, and object that being 
able to break security doesn't make you a hacker any more than being able to 
hotwire cars makes you an automotive engineer.  Unfortunately, many journalists 
and writers have been fooled into using the word ‘hacker’ to describe crackers; 
this irritates real hackers no end.</P>
<P>The basic difference is this: hackers build things, crackers break them.</P>
<P>If you want to be a hacker, keep reading.  If you want to be a cracker, go 
read the <A class="ulink" href="news:alt.2600" target="_top">alt.2600</A> 
newsgroup and get ready to do five to ten in the slammer after finding out you 
aren't as smart as you think you are.  And that's all I'm going to say about
 crackers.</P>
<DIV class="mediaobject"><IMG src="How%20To%20Become%20A%20Hacker_files/glider.png"></DIV></DIV>
<DIV class="sect1">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title" style="clear: both;"><A id="attitude"></A>The Hacker 
Attitude</H2></DIV></DIV></DIV>
<DIV class="toc">
<DL class="toc">
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#believe1">1. 
  The world is full of fascinating problems waiting to be 
solved.</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#believe2">2. 
  No problem should ever have to be solved twice.</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#believe3">3. 
  Boredom and drudgery are evil.</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#believe4">4. 
  Freedom is good.</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#believe5">5. 
  Attitude is no substitute for competence.</A></SPAN></DT></DL></DIV>
<P>Hackers solve problems and build things, and they believe in freedom and 
voluntary mutual help.  To be accepted as a hacker, you have to behave as though 
you have this kind of attitude yourself.  And to behave as though you have the 
attitude, you have to really believe the attitude.</P>
<P>But if you think of cultivating hacker attitudes as just a way to gain 
acceptance in the culture, you'll miss the point.  Becoming the kind of person 
who believes these things is important for <SPAN 
class="emphasis"><EM>you</EM></SPAN> — for helping you learn and keeping you
 motivated.  As with all creative arts, the most effective way to become a 
master is to imitate the mind-set of masters — not just intellectually but 
emotionally as well.</P>
<P>Or, as the following modern Zen poem has it:</P>
<DIV class="literallayout">
<P><BR>&nbsp;&nbsp;&nbsp;&nbsp;To&nbsp;follow&nbsp;the&nbsp;path:<BR>
&nbsp;&nbsp;&nbsp;&nbsp;look&nbsp;to&nbsp;the&nbsp;master,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;follow&nbsp;the&nbsp;master,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;walk&nbsp;with&nbsp;the&nbsp;master,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;see&nbsp;through&nbsp;the&nbsp;master,<BR>
&nbsp;&nbsp;&nbsp;&nbsp;become&nbsp;the&nbsp;master.<BR></P></DIV>
<P>So, if you want to be a hacker, repeat the following things until you believe 
them:</P>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="believe1"></A>1. The world is full of fascinating 
problems waiting to be solved.</H3></DIV></DIV></DIV>
<P>Being a hacker is lots of fun, but it's a kind of fun that takes lots of 
effort.  The effort takes motivation.  Successful athletes get their motivation 
from a kind of physical delight in making their bodies perform, in pushing 
themselves past their own physical limits. Similarly, to be a hacker you have to 
get a basic thrill from solving problems, sharpening your skills, and exercising 
your intelligence.</P>
<P>If you aren't the kind of person that feels this way naturally, you'll need 
to become one in order to make it as a hacker.  Otherwise you'll find your 
hacking energy is sapped by distractions like sex, money, and social 
approval.</P>
<P>(You also have to develop a kind of faith in your own learning capacity — a 
belief that even though you may not know all of what you need to solve a 
problem, if you tackle just a piece of it and learn from that, you'll learn 
enough to solve the next piece — and so on, until you're done.)</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="believe2"></A>2. No problem should ever have to be 
solved twice.</H3></DIV></DIV></DIV>
<P>Creative brains are a valuable, limited resource.  They shouldn't be wasted 
on re-inventing the wheel when there are so many fascinating new problems 
waiting out there.</P>
<P>To behave like a hacker, you have to believe that the thinking time of other 
hackers is precious — so much so that it's almost a moral duty for you to share 
information, solve problems and then give the solutions away just so other 
hackers can solve <SPAN class="emphasis"><EM>new</EM></SPAN> problems instead of 
having to perpetually re-address old ones.</P>
<P>Note, however, that "No problem should ever have to be solved twice." does 
not imply that you have to consider all existing solutions sacred, or that there 
is only one right solution to any given problem.  Often, we learn a lot about 
the problem that we didn't know before by studying the first cut at a solution.  
It's OK, and often necessary, to decide that we can do better.  What's not OK is
 artificial technical, legal, or institutional barriers (like closed-source 
code) that prevent a good solution from being re-used and <SPAN 
class="emphasis"><EM>force</EM></SPAN> people to re-invent wheels.</P>
<P>(You don't have to believe that you're obligated to give <SPAN class="emphasis"><EM>all</EM></SPAN> 
your creative product away, though the hackers that do are the ones that get 
most respect from other hackers. It's consistent with hacker values to sell 
enough of it to keep you in food and rent and computers.  It's fine to use your 
hacking skills to support a family or even get rich, as long as you don't forget 
your loyalty to your art and your fellow hackers while doing it.)</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="believe3"></A>3. Boredom and drudgery are 
evil.</H3></DIV></DIV></DIV>
<P>Hackers (and creative people in general) should never be bored or have to 
drudge at stupid repetitive work, because when this happens it means they aren't 
doing what only they can do — solve new problems. This wastefulness hurts 
everybody.  Therefore boredom and drudgery are not just unpleasant but actually 
evil.</P>
<P>To behave like a hacker, you have to believe this enough to want to automate 
away the boring bits as much as possible, not just for yourself but for 
everybody else (especially other hackers).</P>
<P>(There is one apparent exception to this.  Hackers will sometimes do things 
that may seem repetitive or boring to an observer as a mind-clearing exercise, 
or in order to acquire a skill or have some particular kind of experience you 
can't have otherwise.  But this is by choice — nobody who can think should ever 
be forced into a situation that bores them.)</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="believe4"></A>4. Freedom is 
good.</H3></DIV></DIV></DIV>
<P>Hackers are naturally anti-authoritarian.  Anyone who can give you orders can 
stop you from solving whatever problem you're being fascinated by — and, given 
the way authoritarian minds work, will generally find some appallingly stupid 
reason to do so.  So the authoritarian attitude has to be fought wherever you 
find it, lest it smother you and other hackers.</P>
<P>(This isn't the same as fighting all authority.  Children need to be guided 
and criminals restrained.  A hacker may agree to accept some kinds of authority 
in order to get something he wants more than the time he spends following 
orders. But that's a limited, conscious bargain; the kind of personal surrender 
authoritarians want is not on offer.)</P>
<P>Authoritarians thrive on censorship and secrecy.  And they distrust voluntary 
cooperation and information-sharing — they only like ‘cooperation’ that they 
control. So to behave like a hacker, you have to develop an instinctive 
hostility to censorship, secrecy, and the use of force or deception to compel
 responsible adults.  And you have to be willing to act on that
 belief.</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="believe5"></A>5. Attitude is no substitute for 
competence.</H3></DIV></DIV></DIV>
<P>To be a hacker, you have to develop some of these attitudes.  But copping an 
attitude alone won't make you a hacker, any more than it will make you a 
champion athlete or a rock star.  Becoming a hacker will take intelligence, 
practice, dedication, and hard work.</P>
<P>Therefore, you have to learn to distrust attitude and respect competence of 
every kind.  Hackers won't let posers waste their time, but they worship 
competence — especially competence at hacking, but competence at anything is 
valued.  Competence at demanding skills that few can master is especially good, 
and competence at demanding skills that involve mental acuteness, craft, and 
concentration is best.</P>
<P>If you revere competence, you'll enjoy developing it in yourself — the hard 
work and dedication will become a kind of intense play rather than drudgery.  
That attitude is vital to becoming a hacker.</P>
<DIV class="mediaobject"><IMG src="How%20To%20Become%20A%20Hacker_files/glider.png"></DIV></DIV></DIV>
<DIV class="sect1">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title" style="clear: both;"><A id="basic_skills"></A>Basic Hacking 
Skills</H2></DIV></DIV></DIV>
<DIV class="toc">
<DL class="toc">
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#skills1">1. 
  Learn how to program.</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#skills2">2. 
  Get one of the open-source Unixes and learn to use and run it.</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#skills3">3. 
  Learn how to use the World Wide Web and write HTML.</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#skills4">4. 
  If you don't have functional English, learn it.</A></SPAN></DT></DL></DIV>
<P>The hacker attitude is vital, but skills are even more vital. Attitude is no 
substitute for competence, and there's a certain basic toolkit of skills which 
you have to have before any hacker will dream of calling you one.</P>
<P>This toolkit changes slowly over time as technology creates new skills and 
makes old ones obsolete.  For example, it used to include programming in machine 
language, and didn't until recently involve HTML.  But right now it pretty 
clearly includes the following:</P>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="skills1"></A>1. Learn how to 
program.</H3></DIV></DIV></DIV>
<P>This, of course, is the fundamental hacking skill.  If you don't know any 
computer languages, I recommend starting with Python.  It is cleanly designed, 
well documented, and relatively kind to beginners. Despite being a good first 
language, it is not just a toy; it is very powerful and flexible and well suited 
for large projects.  I have written a more detailed <A class="ulink" href="http://www.linuxjournal.com/article.php?sid=3882" 
target="_top">evaluation of Python</A>.  Good <A class="ulink" href="https://www.python.org/about/gettingstarted/" 
target="_top"> tutorials</A> are available at the <A class="ulink" href="https://docs.python.org/3/tutorial/" 
target="_top">Python web site</A>; there's an excellent third-party one at <A 
class="ulink" href="http://cscircles.cemc.uwaterloo.ca/" target="_top">Computer 
Science Circles</A>.</P>
<P>I used to recommend Java as a good language to learn early, but <A class="ulink" 
href="http://www.crosstalkonline.org/storage/issue-archives/2008/200801/200801-Dewar.pdf" 
target="_top">this critique</A> has changed my mind (search for <SPAN class="quote">“<SPAN 
class="quote">The Pitfalls of Java as a First Programming 
Language</SPAN>”</SPAN> within it).  A hacker cannot, as they devastatingly put 
it <SPAN class="quote">“<SPAN class="quote">approach problem-solving like a 
plumber in a hardware store</SPAN>”</SPAN>; you have to know what the components 
actually <SPAN class="emphasis"><EM>do</EM></SPAN>.  Now I think it is probably 
best to learn C and Lisp first, then Java.</P>
<P>There is perhaps a more general point here.  If a language does too much for 
you, it may be simultaneously a good tool for production and a bad one for 
learning.  It's not only languages that have this problem; web application 
frameworks like RubyOnRails, CakePHP, Django may make it too easy to reach a 
superficial sort of understanding that will leave you without resources when you 
have to tackle a hard problem, or even just debug the solution to an easy 
one.</P>
<P>If you get into serious programming, you will have to learn C, the core 
language of Unix.  C++ is very closely related to C; if you know one, learning 
the other will not be difficult.  Neither language is a good one to try learning 
as your first, however.  And, actually, the more you can avoid programming in C 
the more productive you will be.</P>
<P>C is very efficient, and very sparing of your machine's resources.  
Unfortunately, C gets that efficiency by requiring you to do a lot of low-level 
management of resources (like memory) by hand. All that low-level code is 
complex and bug-prone, and will soak up huge amounts of your time on debugging. 
With today's machines as powerful as they are, this is usually a bad tradeoff — 
it's smarter to use a language that uses the machine's time less efficiently, 
but your time much <SPAN class="emphasis"><EM>more</EM></SPAN> efficiently.  
Thus, Python.</P>
<P>Other languages of particular importance to hackers include <A class="ulink" 
href="http://www.perl.com/" target="_top">Perl</A> and <A class="ulink" href="http://www.lisp.org/" 
target="_top">LISP</A>.  Perl is worth learning for practical reasons; it's very 
widely used for active web pages and system administration, so that even if you 
never write Perl you should learn to read it.  Many people use Perl in the way I 
 suggest you should use Python, to avoid C programming on jobs that don't 
require C's machine efficiency.  You will need to be able to understand their 
code.</P>
<P>LISP is worth learning for a different reason — the profound enlightenment 
experience you will have when you finally get it.  That experience will make you 
a better programmer for the rest of your days, even if you never actually use 
LISP itself a lot.  (You can get some beginning experience with LISP fairly 
easily by writing and modifying editing modes for the Emacs text editor, or 
Script-Fu plugins for the GIMP.)</P>
<P>It's best, actually, to learn all five of Python, C/C++, Java, Perl, and 
LISP.  Besides being the most important hacking languages, they represent very 
different approaches to programming, and each will educate you in valuable 
ways.</P>
<P>But be aware that you won't reach the skill level of a hacker or even merely 
a programmer simply by accumulating languages — you need to learn how to think 
about programming problems in a general way, independent of any one language.  
To be a real hacker, you need to get to the point where you can learn a new 
language in days by relating what's in the manual to what you already know.  
This means you should learn several very different languages.</P>
<P>I can't give complete instructions on how to learn to program here — it's a 
complex skill.  But I can tell you that books and courses won't do it — many, 
maybe <SPAN class="emphasis"><EM>most</EM></SPAN> of the best hackers are 
self-taught.  You can learn language features — bits of knowledge — from books, 
but the mind-set that makes that knowledge into living skill can be learned only 
by practice and apprenticeship. What will do it is (a) <SPAN 
class="emphasis"><EM>reading code</EM></SPAN> and (b) <SPAN 
class="emphasis"><EM>writing code</EM></SPAN>.</P>
<P>Peter Norvig, who is one of Google's top hackers and the co-author of the 
most widely used textbook on AI, has written an excellent essay called <A class="ulink" 
href="http://norvig.com/21-days.html" target="_top">Teach Yourself Programming 
in Ten Years</A>.  His "recipe for programming success" is worth careful 
attention.</P>
<P>Learning to program is like learning to write good natural language. The best 
way to do it is to read some stuff written by masters of the form, write some 
things yourself, read a lot more, write a little more, read a lot more, write 
some more ... and repeat until your writing begins to develop the kind of 
strength and economy you see in your models.</P>
<P>I have had more to say about this learning process in <A class="ulink" href="http://www.catb.org/esr/faqs/hacking-howto.html" 
target="_top">How To Learn Hacking</A>. It's a simple set of instructions, but 
not an easy one.</P>
<P>Finding good code to read used to be hard, because there were few large 
programs available in source for fledgeling hackers to read and tinker with.  
This has changed dramatically; open-source software, programming tools, and 
operating systems (all built by hackers) are now widely available. Which brings 
me neatly to our next topic...</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="skills2"></A>2. Get one of the open-source Unixes and 
learn to use and run it.</H3></DIV></DIV></DIV>
<P>I'll assume you have a personal computer or can get access to one.  (Take a 
moment to appreciate how much that means.  The hacker culture originally evolved 
back when computers were so expensive that individuals could not own them.)  The 
single most important step any newbie can take toward acquiring hacker skills is 
to get a copy of Linux or one of the BSD-Unixes, install it on a personal 
machine, and run it.</P>
<P>Yes, there are other operating systems in the world besides Unix.  But 
they're distributed in binary — you can't read the code, and you can't modify 
it.  Trying to learn to hack on a Microsoft Windows machine or under any other 
closed-source system is like trying to learn to dance while wearing a body 
cast.</P>
<P>Under Mac OS X it's possible, but only part of the system is open source — 
you're likely to hit a lot of walls, and you have to be careful not to develop 
the bad habit of depending on Apple's proprietary code.  If you concentrate on 
the Unix under the hood you can learn some useful things.</P>
<P>Unix is the operating system of the Internet.  While you can learn to use the 
Internet without knowing Unix, you can't be an Internet hacker without 
understanding Unix.  For this reason, the hacker culture today is pretty 
strongly Unix-centered. (This wasn't always true, and some old-time hackers 
still aren't happy about it, but the symbiosis between Unix and the Internet has 
become strong enough that even Microsoft's muscle doesn't seem able to seriously 
dent it.)</P>
<P>So, bring up a Unix — I like Linux myself but there are other ways (and yes, 
you <SPAN class="emphasis"><EM>can</EM></SPAN> run both Linux and Microsoft 
Windows on the same machine).  Learn it.  Run it.  Tinker with it. Talk to the 
Internet with it.  Read the code.  Modify the code. You'll get better 
programming tools (including C, LISP, Python, and Perl) than any Microsoft 
operating system can dream of hosting, you'll have fun, and you'll soak up more 
knowledge than you realize you're learning until you look back on it as a master 
hacker.</P>
<P>For more about learning Unix, see <A class="ulink" href="http://catb.org/~esr/faqs/loginataka.html" 
target="_top">The Loginataka</A>. You might also want to have a look at <A 
class="ulink" href="http://catb.org/~esr/writings/taoup/" target="_top">The Art 
Of Unix Programming</A>.</P>
<P>The blog <A class="ulink" href="https://letsgolarval.wordpress.com/" target="_top">Let's
 Go Larval!</A> is a window on the learning process of a a new Linux user that I 
think is unusually lucid and helpful.  The  post <A class="ulink" href="https://letsgolarval.wordpress.com/2015/06/23/how-i-learned-linux/" 
target="_top">How I Learned Linux</A> makes a good starting point.</P>
<P>To get your hands on a Linux, see the <A class="ulink" href="http://www.linux.org/" 
target="_top">Linux Online!</A> site; you can download from there or (better 
idea) find a local Linux user group to help you with installation.</P>
<P>During the first ten years of this HOWTO's life, I reported that from a new 
user's point of view, all Linux distributions are almost equivalent.  But in 
2006-2007, an actual best choice emerged: <A class="ulink" href="http://www.ubuntu.com/" 
target="_top">Ubuntu</A>. While other distros have their own areas of strength, 
Ubuntu is far and away the most accessible to Linux newbies. Beware, though, of 
the hideous and nigh-unusable "Unity" desktop interface that Ubuntu introduced 
as a default a few years later; the Xubuntu or Kubuntu variants are better.</P>
<P>You can find BSD Unix help and resources at <A class="ulink" href="http://www.bsd.org/" 
target="_top">http://www.bsd.org/</A>.</P>
<P>A good way to dip your toes in the water is to boot up what Linux fans call a 
<A class="ulink" href="http://www.livecdnews.com/" target="_top">live CD</A>, a 
distribution that runs entirely off a CD without having to modify your hard 
disk.  This will be slow, because CDs are slow, but it's a way to get a look at 
the possibilities without having to do anything drastic.</P>
<P>I have written a primer on the <A class="ulink" href="http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/index.html" 
target="_top">basics of Unix and the Internet</A>.</P>
<P>I used to recommend against installing either Linux or BSD as a solo project 
if you're a newbie.  Nowadays the installers have gotten good enough that doing 
it entirely on your own is possible, even for a newbie.  Nevertheless, I still 
recommend making contact with your local Linux user's group and asking for help. 
It can't hurt, and may smooth the process.</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="skills3"></A>3. Learn how to use the World Wide Web and 
write HTML.</H3></DIV></DIV></DIV>
<P>Most of the things the hacker culture has built do their work out of sight, 
helping run factories and offices and universities without any obvious impact on 
how non-hackers live.  The Web is the one big exception, the huge shiny hacker 
toy that even <SPAN class="emphasis"><EM>politicians</EM></SPAN> admit has 
changed the world.  For this reason alone (and a lot of other good ones as well) 
you need to learn how to work the Web.</P>
<P>This doesn't just mean learning how to drive a browser (anyone can do that), 
but learning how to write HTML, the Web's markup language. If you don't know how 
to program, writing HTML will teach you some mental habits that will help you 
learn. So build a home page.</P>
<P>But just having a home page isn't anywhere near good enough to make you a 
hacker.  The Web is full of home pages.  Most of them are pointless, 
zero-content sludge — very snazzy-looking sludge, mind you, but sludge all the 
same (for more on this see <A class="ulink" href="http://catb.org/~esr/html-hell.html" 
target="_top">The HTML Hell Page</A>).</P>
<P>To be worthwhile, your page must have <SPAN 
class="emphasis"><EM>content</EM></SPAN> — it must be interesting and/or useful
 to other hackers.  And that brings us to the next topic...</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="skills4"></A>4. If you don't have functional English, 
learn it.</H3></DIV></DIV></DIV>
<P>As an American and native English-speaker myself, I have previously been 
reluctant to suggest this, lest it be taken as a sort of cultural imperialism.  
But several native speakers of other languages have urged me to point out that 
English is the working language of the hacker culture and the Internet, and that 
you  will need to know it to function in the hacker community.</P>
<P>Back around 1991 I learned that many hackers who have English as a second 
language use it in technical discussions even when they share a birth tongue; it 
was reported to me at the time that English has a richer technical vocabulary 
than any other language and is therefore simply a better tool for the job.  For 
similar reasons, translations of technical books written in English are often 
unsatisfactory (when they get done at all).</P>
<P>Linus Torvalds, a Finn, comments his code in English (it apparently never 
occurred to him to do otherwise).  His fluency in English has been an important 
factor in his ability to recruit a worldwide community of developers for Linux.  
It's an example worth following.</P>
<P>Being a native English-speaker does not guarantee that you have language 
skills good enough to function as a hacker.  If your writing is semi-literate, 
ungrammatical, and riddled with misspellings, many hackers (including myself) 
will tend to ignore you.  While sloppy writing does not invariably mean sloppy 
thinking, we've generally found the correlation to be strong — and we have no 
use for sloppy thinkers.  If you can't yet write competently, learn to.</P>
<DIV class="mediaobject"><IMG src="How%20To%20Become%20A%20Hacker_files/glider.png"></DIV></DIV></DIV>
<DIV class="sect1">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title" style="clear: both;"><A id="status"></A>Status in the Hacker 
Culture</H2></DIV></DIV></DIV>
<DIV class="toc">
<DL class="toc">
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#respect1">1. 
  Write open-source software</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#respect2">2. 
  Help test and debug open-source software</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#respect3">3. 
  Publish useful information</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#respect4">4. 
  Help keep the infrastructure working</A></SPAN></DT>
  <DT><SPAN class="sect2"><A href="http://www.catb.org/esr/faqs/hacker-howto.html#respect5">5. 
  Serve the hacker culture itself</A></SPAN></DT></DL></DIV>
<P>Like most cultures without a money economy, hackerdom runs on reputation.  
You're trying to solve interesting problems, but how interesting they are, and 
whether your solutions are really good, is something that only your technical 
peers or superiors are normally equipped to judge.</P>
<P>Accordingly, when you play the hacker game, you learn to keep score primarily 
by what other hackers think of your skill (this is why you aren't really a 
hacker until other hackers consistently call you one).  This fact is obscured by 
the image of hacking as solitary work; also by a hacker-cultural taboo 
(gradually decaying since the late 1990s but still potent) against admitting 
that ego or external validation are involved in one's motivation at all.</P>
<P>Specifically, hackerdom is what anthropologists call a <SPAN 
class="emphasis"><EM>gift culture</EM></SPAN>.  You gain status and reputation 
in it not by dominating other people, nor by being beautiful, nor by having 
things other people want, but rather by giving things away.  Specifically, by
 giving away your time, your creativity, and the results of your skill.</P>
<P>There are basically five kinds of things you can do to be respected by
 hackers:</P>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="respect1"></A>1. Write open-source 
software</H3></DIV></DIV></DIV>
<P>The first (the most central and most traditional) is to write programs that 
other hackers think are fun or useful, and give the program sources away to the 
whole hacker culture to use.</P>
<P>(We used to call these works “free software”, but this confused too many 
people who weren't sure exactly what “free” was supposed to mean.  Most of us 
now prefer the term “<A class="ulink" href="http://www.opensource.org/" target="_top">open-source</A>” 
software).</P>
<P>Hackerdom's most revered demigods are people who have written large, capable 
programs that met a widespread need and given them away, so that now everyone 
uses them.</P>
<P>But there's a bit of a fine historical point here.  While hackers have always 
looked up to the open-source developers among them as our community's hardest 
core, before the mid-1990s most hackers most of the time worked on closed 
source. This was still true when I wrote the first version of this HOWTO in 
1996; it took the mainstreaming of open-source software after 1997 to change 
things. Today, "the hacker community" and "open-source developers" are two
 descriptions for what is essentially the same culture and population — but it 
is worth remembering that this was not always so. (For more on this, see <A 
title="Historical Note: Hacking, Open Source, and Free Software" class="xref" 
href="http://www.catb.org/esr/faqs/hacker-howto.html#history">the section called 
“Historical Note: Hacking, Open Source, and Free Software”</A>.)</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="respect2"></A>2. Help test and debug open-source 
software</H3></DIV></DIV></DIV>
<P>They also serve who stand and debug open-source software.  In this imperfect 
world, we will inevitably spend most of our software development time in the 
debugging phase. That's why any open-source author who's thinking will tell you 
that good beta-testers (who know how to describe symptoms clearly, localize 
problems well, can tolerate bugs in a quickie release, and are willing to apply 
a few simple diagnostic routines) are worth their weight in rubies.  Even one of
 these can make the difference between a debugging phase that's a protracted, 
exhausting nightmare and one that's merely a salutary nuisance.</P>
<P>If you're a newbie, try to find a program under development that you're 
interested in and be a good beta-tester.  There's a natural progression from 
helping test programs to helping debug them to helping modify them.  You'll 
learn a lot this way, and generate good karma with people who will help you 
later on.</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="respect3"></A>3. Publish useful 
information</H3></DIV></DIV></DIV>
<P>Another good thing is to collect and filter useful and interesting 
information into web pages or documents like  Frequently Asked Questions (FAQ) 
lists, and make those generally available.</P>
<P>Maintainers of major technical FAQs get almost as much respect as open-source 
authors.</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="respect4"></A>4. Help keep the infrastructure 
working</H3></DIV></DIV></DIV>
<P>The hacker culture (and the engineering development of the Internet, for that 
matter) is run by volunteers.  There's a lot of necessary but unglamorous work 
that needs done to keep it going — administering mailing lists, moderating 
newsgroups, maintaining large software archive sites, developing RFCs and other
 technical standards.</P>
<P>People who do this sort of thing well get a lot of respect, because everybody 
knows these jobs are huge time sinks and not as much fun as playing with code.  
Doing them shows dedication.</P></DIV>
<DIV class="sect2">
<DIV class="titlepage">
<DIV>
<DIV>
<H3 class="title"><A id="respect5"></A>5. Serve the hacker culture 
itself</H3></DIV></DIV></DIV>
<P>Finally, you can serve and propagate the culture itself (by, for example, 
writing an accurate primer on how to become a hacker :-)). This is not something 
you'll be positioned to do until you've been around for while and become 
well-known for one of the first four things.</P>
<P>The hacker culture doesn't have leaders, exactly, but it does have culture 
heroes and tribal elders and historians and spokespeople. When you've been in 
the trenches long enough, you may grow into one of these.  Beware: hackers 
distrust blatant ego in their tribal elders, so visibly reaching for this kind 
of fame is dangerous.  Rather than striving for it, you have to sort of position 
yourself so it drops in your lap, and then be modest and gracious about your 
status.</P>
<DIV class="mediaobject"><IMG src="How%20To%20Become%20A%20Hacker_files/glider.png"></DIV></DIV></DIV>
<DIV class="sect1">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title" style="clear: both;"><A id="nerd_connection"></A>The 
Hacker/Nerd Connection</H2></DIV></DIV></DIV>
<P>Contrary to popular myth, you don't have to be a nerd to be a hacker.  It 
does help, however, and many hackers are in fact nerds. Being something of a 
social outcast helps you stay concentrated on the really important things, like 
thinking and hacking.</P>
<P>For this reason, many hackers have adopted the label ‘geek’ as a badge of 
pride — it's a way of declaring their independence from normal social 
expectations (as well as a fondness for other things like science fiction and 
strategy games that often go with being a hacker). The term 'nerd' used to be 
used this way back in the 1990s, back when 'nerd' was a mild pejorative and
 'geek' a rather harsher one; sometime after 2000 they switched places, at least 
in U.S. popular culture, and there is now even a significant geek-pride culture 
among people who aren't techies.</P>
<P>If you can manage to concentrate enough on hacking to be good at it and still 
have a life, that's fine.  This is a lot easier today than it was when I was a 
newbie in the 1970s; mainstream culture is much friendlier to techno-nerds now.  
There are even growing numbers of people who realize that hackers are often 
high-quality lover and spouse material.</P>
<P>If you're attracted to hacking because you don't have a life, that's OK too — 
at least you won't have trouble concentrating. Maybe you'll get a life later 
on.</P>
<DIV class="mediaobject"><IMG src="How%20To%20Become%20A%20Hacker_files/glider.png"></DIV></DIV>
<DIV class="sect1">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title" style="clear: both;"><A id="style"></A>Points For 
Style</H2></DIV></DIV></DIV>
<P>Again, to be a hacker, you have to enter the hacker mindset.  There are some 
things you can do when you're not at a computer that seem to help.  They're not 
substitutes for hacking (nothing is) but many hackers do them, and feel that 
they connect in some basic way with the essence of hacking.</P><A 
id="do_this"></A>
<DIV class="itemizedlist">
<UL class="itemizedlist" style="list-style-type: disc;">
  <LI class="listitem">
  <P>Learn to write your native language well.  Though     it's a common 
  stereotype that programmers can't write, a     surprising number of hackers 
  (including all the most accomplished      ones I know of) are very able 
  writers.</P></LI>
  <LI class="listitem">
  <P>Read science fiction.  Go to science fiction     conventions (a good way to 
  meet hackers and proto-hackers).      </P></LI>
  <LI class="listitem">
  <P>Join a hackerspace and make things     (another good way to meet hackers 
  and proto-hackers).      </P></LI>
  <LI class="listitem">
  <P>Train in a martial-arts form.  The kind of mental     discipline required 
  for martial arts seems to be similar in     important ways to what hackers do. 
   The most popular forms among     hackers are definitely Asian empty-hand arts 
  such as Tae Kwon Do,     various forms of Karate, Kung Fu, Aikido, or Ju 
  Jitsu.  Western     fencing and Asian sword arts also have visible followings. 
  In     places where it's legal, pistol shooting has been rising in     
  popularity since the late 1990s. The most hackerly martial arts     are those 
  which emphasize mental discipline, relaxed awareness,     and precise control, 
  rather than raw strength, athleticism, or physical     toughness.</P></LI>
  <LI class="listitem">
  <P>Study an actual meditation discipline.  The perennial     favorite among 
  hackers is Zen (importantly, it is possible to     benefit from Zen without 
  acquiring a religion or discarding one     you already have).  Other styles 
  may work as well, but be careful     to choose one that doesn't require you to 
  believe crazy     things.</P></LI>
  <LI class="listitem">
  <P> Develop an analytical ear for music.  Learn to     appreciate peculiar 
  kinds of music.  Learn to play some musical     instrument well, or how to 
  sing.</P></LI>
  <LI class="listitem">
  <P> Develop your appreciation of puns and     wordplay.</P></LI></UL></DIV>
<P>The more of these things you already do, the more likely it is that you are 
natural hacker material.   Why these things in particular is not completely 
clear, but they're connected with a mix of left- and right-brain skills that 
seems to be important; hackers need to be able to both reason logically and step 
outside the apparent logic of a problem at a moment's notice.</P>
<P>Work as intensely as you play and play as intensely as you work. For true 
hackers, the boundaries between "play", "work", "science" and "art" all tend to 
disappear, or to merge into a high-level creative playfulness.  Also, don't be 
content with a narrow range of skills. Though most hackers self-describe as 
programmers, they are very likely to be more than competent in several related 
skills — system administration, web design, and PC hardware troubleshooting are 
common ones.  A hacker who's a system administrator, on the other hand, is
 likely to be quite skilled at script programming and web design. Hackers don't 
do things by halves; if they invest in a skill at all, they tend to get very 
good at it.</P>
<P><A id="not_to_do"></A>Finally, a few things <SPAN 
class="emphasis"><EM>not</EM></SPAN> to do.</P>
<DIV class="itemizedlist">
<UL class="itemizedlist" style="list-style-type: disc;">
  <LI class="listitem">
  <P> Don't use a silly, grandiose user ID or screen name.      </P></LI>
  <LI class="listitem">
  <P> Don't get in flame wars on Usenet (or anywhere     else).</P></LI>
  <LI class="listitem">
  <P> Don't call yourself a ‘cyberpunk’, and don't waste     your time on 
  anybody who does.</P></LI>
  <LI class="listitem">
  <P> Don't post or email writing that's full of spelling     errors and bad 
  grammar.</P></LI></UL></DIV>
<P>The only reputation you'll make doing any of these things is as a twit.  
Hackers have long memories — it could take you years to live your early blunders 
down enough to be accepted.</P>
<P>The problem with screen names or handles deserves some amplification.  
Concealing your identity behind a handle is a juvenile and silly behavior 
characteristic of crackers, warez d00dz, and other lower life forms.  Hackers 
don't do this; they're proud of what they do and want it associated with their 
<SPAN class="emphasis"><EM>real</EM></SPAN> names. So if you have a handle, drop 
it.  In the hacker culture it will only mark you as a loser.</P>
<DIV class="mediaobject"><IMG src="How%20To%20Become%20A%20Hacker_files/glider.png"></DIV></DIV>
<DIV class="sect1">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title" style="clear: both;"><A id="history"></A>Historical Note: 
Hacking, Open Source, and Free Software</H2></DIV></DIV></DIV>
<P>When I originally wrote this how-to in late 1996, some of the conditions 
around it were very different from the way they look today. A few words about 
these changes may help clarify matters for people who are confused about the 
relationship of open source, free software, and Linux to the hacker community.  
If you are not curious about this, you can skip straight to the FAQ and 
bibliography from here.</P>
<P>The hacker ethos and community as I have described it here long predates the 
emergence of Linux after 1990; I first became involved with it around 1976, and, 
its roots are readily traceable back to the early 1960s.  But before Linux, most 
hacking was done on either proprietary operating systems or a handful of 
quasi-experimental homegrown systems like MIT's ITS that were never deployed 
outside of their original academic niches.  While there had been some earlier
 (pre-Linux) attempts to change this situation, their impact was at best very 
marginal and confined to communities of dedicated true believers which were tiny 
minorities even within the hacker community, let alone with respect to the 
larger world of software in general.</P>
<P>What is now called "open source" goes back as far as the hacker community 
does, but until 1985 it was an unnamed folk practice rather than a conscious 
movement with theories and manifestos attached to it. This prehistory ended 
when, in 1985, arch-hacker Richard Stallman ("RMS") tried to give it a name — 
"free software". But his act of naming was also an act of claiming; he attached 
ideological baggage to the "free software" label which much of the existing 
hacker community never accepted.  As a result, the "free software" label was
 loudly rejected by a substantial minority of the hacker community (especially 
among those associated with BSD Unix), and used with serious but silent 
reservations by a majority of the remainder (including myself).</P>
<P>Despite these reservations, RMS's claim to define and lead the hacker 
community under the "free software" banner broadly held until the mid-1990s. It 
was seriously challenged only by the rise of Linux. Linux gave open-source 
development a natural home.  Many projects issued under terms we would now call 
open-source migrated from proprietary Unixes to Linux.  The community around 
Linux grew explosively, becoming far larger and more heterogenous than the
 pre-Linux hacker culture. RMS determinedly attempted to co-opt all this 
activity into his "free software" movement, but was thwarted by both the 
exploding diversity of the Linux community and the public skepticism of its 
founder, Linus Torvalds.  Torvalds continued to use the term "free software" for 
lack of any alternative, but publicly rejected RMS's ideological baggage. Many 
younger hackers followed suit.</P>
<P>In 1996, when I first published this Hacker HOWTO, the hacker community was 
rapidly reorganizing around Linux and a handful of other open-source operating 
systems (notably those descended from BSD Unix). Community memory of the fact 
that most of us had spent decades developing closed-source software on 
closed-source operating systems had not yet begun to fade, but that fact was 
already beginning to seem like part of a dead past; hackers were, increasingly, 
defining themselves as hackers by their attachments to open-source projects such 
as Linux or Apache.</P>
<P>The term "open source", however, had not yet emerged; it would not do so 
until early 1998.  When it did, most of the hacker community adopted it within 
the following six months; the exceptions were a minority ideologically attached 
to the term "free software". Since 1998, and especially after about 2003, the 
identification of 'hacking' with 'open-source (and free software) development' 
has become extremely close.  Today there is little point in attempting to
 distinguish between these categories, and it seems unlikely that will change in 
the future.</P>
<P>It is worth remembering, however, that this was not always so.</P>
<DIV class="mediaobject"><IMG src="How%20To%20Become%20A%20Hacker_files/glider.png"></DIV></DIV>
<DIV class="sect1">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title" style="clear: both;"><A id="resources"></A>Other 
Resources</H2></DIV></DIV></DIV>
<P>Paul Graham has written an essay called <A class="ulink" href="http://www.paulgraham.com/gh.html" 
target="_top">Great Hackers</A>, and another on <A class="ulink" href="http://www.paulgraham.com/college.html" 
target="_top">Undergraduation</A>, in which he speaks much wisdom.</P>
<P>There is a document called <A class="ulink" href="http://samizdat.mines.edu/howto/HowToBeAProgrammer.html" 
target="_top">How To Be A Programmer</A> that is an excellent complement to this 
one.  It has valuable advice not just about coding and skillsets, but about how 
to function on a programming team.</P>
<P>I have also written <A class="ulink" href="http://catb.org/~esr/writings/hacker-history/hacker-history.html" 
target="_top"><EM class="citetitle">A Brief History Of Hackerdom</EM></A>.</P>
<P>I have written a paper, <A class="ulink" href="http://catb.org/~esr/writings/cathedral-bazaar/index.html" 
target="_top"><EM class="citetitle">The Cathedral and the Bazaar</EM></A>, which 
explains a lot about how the Linux and open-source cultures work.  I have 
addressed this topic even more directly in its sequel <A class="ulink" href="http://catb.org/~esr/writings/homesteading/" 
target="_top"><EM class="citetitle">Homesteading the Noosphere</EM></A>.</P>
<P>Rick Moen has written an excellent document on <A class="ulink" href="http://linuxmafia.com/faq/Linux_PR/newlug.html" 
target="_top">how to run a Linux user group</A>.</P>
<P>Rick Moen and I have collaborated on another document on <A class="ulink" 
href="http://catb.org/~esr/faqs/smart-questions.html" target="_top">How To Ask 
Smart Questions</A>.  This will help you seek assistance in a way that makes it 
more likely that you will actually get it.</P>
<P>If you need instruction in the basics of how personal computers, Unix, and 
the Internet work, see <A class="ulink" href="http://en.tldp.org/HOWTO//Unix-and-Internet-Fundamentals-HOWTO/" 
target="_top">The Unix and Internet Fundamentals HOWTO</A>. </P>
<P>When you release software or write patches for software, try to follow the 
guidelines in the <A class="ulink" href="http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html" 
target="_top">Software Release Practice HOWTO</A>.</P>
<P>If you enjoyed the Zen poem, you might also like <A class="ulink" href="http://catb.org/~esr//writings/unix-koans" 
target="_top">Rootless  Root: The Unix Koans of Master Foo</A>.</P>
<DIV class="mediaobject"><IMG src="How%20To%20Become%20A%20Hacker_files/glider.png"></DIV></DIV>
<DIV class="sect1">
<DIV class="titlepage">
<DIV>
<DIV>
<H2 class="title" style="clear: both;"><A id="FAQ"></A>Frequently Asked 
Questions</H2></DIV></DIV></DIV>
<DIV class="qandaset"><A id="idp63195936"></A>
<DL>
  <DT>Q: <A 
  href="http://www.catb.org/esr/faqs/hacker-howto.html#hacker_already">How do I 
  tell if I am already a hacker?</A></DT>
  <DT>Q: <A 
  href="http://www.catb.org/esr/faqs/hacker-howto.html#teach_hack">Will you 
  teach me how to hack?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#getting_started">How 
  can I get started, then?</A></DT>
  <DT>Q: <A 
  href="http://www.catb.org/esr/faqs/hacker-howto.html#when_start">When do you 
  have to start?  Is it too late for me to learn?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#how_long">How 
  long will it take me to learn to hack?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#closed_lang">Is 
  Visual Basic a good language to start with?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#I_want_to_crack_and_Im_an_idiot">Would 
  you help me to crack a system, or teach me how to crack?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#passwords">How 
  can I get the password for someone else's account?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#crackmail">How 
  can I break into/read/monitor someone else's email?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#crackop">How 
  can I steal channel op privileges on IRC?</A></DT>
  <DT>Q: <A 
  href="http://www.catb.org/esr/faqs/hacker-howto.html#anti_crack">I've been 
  cracked.  Will you help me fend off further attacks?</A></DT>
  <DT>Q: <A 
  href="http://www.catb.org/esr/faqs/hacker-howto.html#windows_grief">I'm having 
  problems with my Windows software.  Will you help me?</A></DT>
  <DT>Q: <A 
  href="http://www.catb.org/esr/faqs/hacker-howto.html#real_hackers">Where can I 
  find some real hackers to talk with?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#books">Can you 
  recommend useful books about hacking-related subjects?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#mathematics">Do 
  I need to be good at math to become a hacker?</A></DT>
  <DT>Q: <A 
  href="http://www.catb.org/esr/faqs/hacker-howto.html#language_first">What 
  language should I learn first?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#hardware">What 
  kind of hardware do I need?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#started2">I 
  want to contribute.  Can you help me pick a problem to work on?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#MS_hater">Do I 
  need to hate and bash Microsoft?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#no_living">But 
  won't open-source software leave programmers unable to make a living?</A></DT>
  <DT>Q: <A href="http://www.catb.org/esr/faqs/hacker-howto.html#problems">Where 
  can I get a free Unix?</A></DT></DL>
<TABLE style="width: 100%;" border="0">
  <COLGROUP>
  <COL width="1%" align="left">
  <COL></COLGROUP>
  <TBODY>
  <TR class="question">
    <TD align="left" valign="top"><A id="hacker_already"></A><A id="idp63196928"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>How do I tell if I am already a hacker?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Ask yourself the following three questions:</P>
      <DIV class="itemizedlist">
      <UL class="itemizedlist" style="list-style-type: disc;">
        <LI class="listitem">
        <P>Do you speak code, fluently?</P></LI>
        <LI class="listitem">
        <P>Do you identify with the goals and values of the          hacker 
        community?</P></LI>
        <LI class="listitem">
        <P>Has a well-established member of the hacker          community ever 
        called you a hacker?</P></LI></UL></DIV>
      <P>If you can answer yes to <SPAN class="emphasis"><EM>all 
      three</EM></SPAN> of these questions, you are already a hacker.  No two 
      alone are sufficient.</P>
      <P>The first test is about skills.  You probably pass it if you have the 
      minimum technical skills described earlier in this document. You blow 
      right through it if you have had a substantial amount of code accepted by 
      an open-source development project.</P>
      <P>The second test is about attitude.  If the <A title="The Hacker Attitude" 
      class="link" href="http://www.catb.org/esr/faqs/hacker-howto.html#attitude">five 
      principles of the hacker mindset</A> seemed obvious to you, more like a 
      description of the way you already live than anything novel, you are 
      already halfway to passing it. That's the inward half; the other, outward 
      half is the degree to which you identify with the hacker community's 
      long-term projects.</P>
      <P>Here is an incomplete but indicative list of some of those projects: 
      Does it matter to you that Linux improve and spread? Are you passionate 
      about software freedom?  Hostile to monopolies? Do you act on the belief 
      that computers can be instruments of empowerment that make the world a 
      richer and more humane place?</P>
      <P>But a note of caution is in order here. The hacker community has some 
      specific, primarily defensive political interests — two of them are 
      defending free-speech rights and fending off "intellectual-property" power 
      grabs that would make open source illegal. Some of those long-term 
      projects are civil-liberties organizations like the Electronic Frontier 
      Foundation, and the outward attitude properly includes support of them.  
      But beyond that, most hackers view attempts to systematize the hacker 
      attitude into an explicit political program with suspicion; we've learned, 
      the hard way, that these attempts are divisive and distracting.  If 
      someone tries to recruit you to march on your capitol in the name of the
       hacker attitude, they've missed the point.  The right response is
       probably <SPAN class="quote">“<SPAN class="quote">Shut up and show them 
      the code.</SPAN>”</SPAN></P>
      <P>The third test has a tricky element of recursiveness about it. I 
      observed in <A title="What Is a Hacker?" class="xref" href="http://www.catb.org/esr/faqs/hacker-howto.html#what_is">the 
      section called “What Is a Hacker?”</A> that being a hacker is partly a
       matter of belonging to a particular subculture or social network with a 
      shared history, an inside and an outside.  In the far past, hackers were a 
      much less cohesive and self-aware group than they are today. But the 
      importance of the social-network aspect has increased over the last thirty 
      years as the Internet has made connections with the core of the hacker 
      subculture easier to develop and maintain.  One easy behavioral index of 
      the change is that, in this century, we have our own T-shirts.</P>
      <P>Sociologists, who study networks like those of the hacker culture under 
      the general rubric of "invisible colleges", have noted that one 
      characteristic of such networks is that they have gatekeepers — core 
      members with the social authority to endorse new members into the network. 
       Because the "invisible college" that is hacker culture is a loose and 
      informal one, the role of gatekeeper is informal too.  But one thing that 
      all hackers understand in their bones is that not every hacker is a 
      gatekeeper. Gatekeepers have to have a certain degree of seniority and 
      accomplishment before they can bestow the title. How much is hard to 
      quantify, but every hacker knows it when they see it.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="teach_hack"></A><A 
      id="idp63208896"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Will you teach me how to hack?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Since first publishing this page, I've gotten several requests a week 
      (often several a day) from people to "teach me all about hacking".  
      Unfortunately, I don't have the time or energy to do this; my own hacking 
      projects, and working as an open-source advocate, take up 110% of my 
      time.</P>
      <P>Even if I did, hacking is an attitude and skill you basically have to
       teach yourself.  You'll find that while real hackers want to help you,
       they won't respect you if you beg to be spoon-fed everything they
       know.</P>
      <P>Learn a few things first.  Show that you're trying, that you're capable 
      of learning on your own.  Then go to the hackers you meet with specific 
      questions.</P>
      <P>If you do email a hacker asking for advice, here are two things to know 
      up front.  First, we've found that people who are lazy or careless in 
      their writing are usually too lazy and careless in their thinking to make 
      good hackers — so take care to spell correctly, and use good grammar and 
      punctuation, otherwise you'll probably be ignored.  Secondly, don't <SPAN 
      class="emphasis"><EM>dare</EM></SPAN> ask for a reply to an ISP account 
      that's different from the account you're sending from; we find people who 
      do that are usually thieves using stolen accounts, and we have no interest 
      in rewarding or assisting thievery.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="getting_started"></A><A id="idp63213904"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>How can I get started, then?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>The best way for you to get started would probably be to go to a LUG
       (Linux user group) meeting.  You can find such groups on the <A class="ulink" 
      href="http://www.tldp.org/links/index.html" target="_top">LDP General 
      Linux Information Page</A>; there is probably one near you, possibly
       associated with a college or university.  LUG members will probably give 
      you a Linux if you ask, and will certainly help you install one and get 
      started.</P>
      <P>Your next step (and your first step if you can't find a LUG nearby) 
       should be to find an open-source project that interests you.  Start 
      reading code and reviewing bugs.  Learn to contribute, and work your way 
      in.</P>
      <P><SPAN class="emphasis"><EM>The only way in is by working to improve 
      your skills.</EM></SPAN> If you ask me personally for advice on how to get
       started, I will tell you these exact same things, because I don't have
       any magic shortcuts for you.  I will also mentally write you off as a
       probable loser - because if you lacked the stamina to read this FAQ and 
      the intelligence to understand from it that <SPAN class="emphasis"><EM>the 
      only way in is by working to improve your skills</EM></SPAN>, you're
       hopeless.</P>
      <P>Another interesting possibility is to go visit a hackerspace. There is 
      a burgeoning movement of people creating physical locations - maker's 
      clubs - where they can hang out to work on hardware and software projects 
      together, or work solo in a cogenial atmosphere.  Hackerspaces often 
      collect tools and specialized equipment that would be too expensive or 
      logistically inconvenient for individuals to own. Hackerspaces are easy to 
      find on the Internet; one may be located near you.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="when_start"></A><A 
      id="idp63219872"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>When do you have to start?  Is it too late for me to learn?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Any age at which you are motivated to start is a good age. Most people
       seem to get interested between ages 15 and 20, but I know of exceptions 
      in both directions.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="how_long"></A><A 
id="idp63222208"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>How long will it take me to learn to hack?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>That depends on how talented you are and how hard you work at it.  Most 
      people who try can acquire a respectable skill set in eighteen months to 
      two years, if they concentrate.  Don't think it ends there, though; in 
      hacking (as in many other fields) it takes about ten years to achieve 
      mastery.  And if you are a real hacker, you will spend the rest of your 
      life learning and perfecting your craft.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="closed_lang"></A><A 
      id="idp63224784"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Is Visual Basic a good language to start with?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>If you're asking this question, it almost certainly means you're
       thinking about trying to hack under Microsoft Windows.  This is a bad
       idea in itself.  When I compared trying to learn to hack under Windows to 
      trying to learn to dance while wearing a body cast, I wasn't kidding.  
      Don't go there.  It's ugly, and it never stops being ugly.</P>
      <P>There is a specific problem with Visual Basic; mainly that it's not 
      portable.  Though there is a prototype open-source implementations of 
      Visual Basic, the applicable ECMA standards don't cover more than a small 
      set of its programming interfaces.  On Windows most of its library support 
      is proprietary to a single vendor (Microsoft); if you aren't <SPAN class="emphasis"><EM>extremely</EM></SPAN>
       careful about which features you use — more careful than any newbie is 
      really capable of being — you'll end up locked into only those platforms 
      Microsoft chooses to support.  If you're starting on a Unix, much better 
      languages with better libraries  are available.  Python, for example.</P>
      <P>Also, like other Basics, Visual Basic is a poorly-designed language 
      that will teach you bad programming habits. No, <SPAN 
      class="emphasis"><EM>don't</EM></SPAN> ask me to describe them in detail; 
      that explanation would fill a book.  Learn a well-designed language 
      instead.</P>
      <P>One of those bad habits is becoming dependent on a single vendor's 
      libraries, widgets, and development tools.  In general, any language that 
      isn't fully supported under at least Linux or one of the BSDs, and/or at 
      least three different vendors' operating systems, is a poor one to learn 
      to hack in.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A 
      id="I_want_to_crack_and_Im_an_idiot"></A><A id="idp63230464"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Would you help me to crack a system, or teach me how to 
crack?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>No.  Anyone who can still ask such a question after reading this FAQ is 
      too stupid to be educable even if I had the time for tutoring. Any emailed 
      requests of this kind that I get will be ignored or answered with extreme 
      rudeness.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="passwords"></A><A 
      id="idp63232944"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>How can I get the password for someone else's account?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>This is cracking.  Go away, idiot.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="crackmail"></A><A 
      id="idp63235104"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>How can I break into/read/monitor someone else's email?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>This is cracking.  Get lost, moron.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="crackop"></A><A id="idp63237264"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>How can I steal channel op privileges on IRC?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>This is cracking.  Begone, cretin.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="anti_crack"></A><A 
      id="idp63239424"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>I've been cracked.  Will you help me fend off further 
attacks?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>No.  Every time I've been asked this question so far, it's been from 
      some poor sap running Microsoft Windows.  It is not possible to
       effectively secure Windows systems against crack attacks; the code and
       architecture simply have too many flaws, which makes securing Windows
       like trying to bail out a boat with a sieve.  The only reliable
       prevention starts with switching to Linux or some other operating system 
      that is designed to at least be capable of security.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="windows_grief"></A><A id="idp63242144"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>I'm having problems with my Windows software.  Will you help 
  me?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Yes.  Go to a DOS prompt and type "format c:".  Any problems you are 
       experiencing will cease within a few minutes.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="real_hackers"></A><A 
      id="idp63244512"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Where can I find some real hackers to talk with?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>The best way is to find a Unix or Linux user's group local to you and
       go to their meetings (you can find links to several lists of user groups 
      on the <A class="ulink" href="http://www.tldp.org/" target="_top">LDP</A> 
      site at ibiblio).</P>
      <P>(I used to say here that you wouldn't find any real hackers on IRC, but 
      I'm given to understand this is changing.  Apparently some real hacker 
      communities, attached to things like GIMP and Perl, have IRC channels 
      now.)</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="books"></A><A id="idp63248080"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Can you recommend useful books about hacking-related 
subjects?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>I maintain a <A class="ulink" href="http://en.tldp.org/HOWTO/Reading-List-HOWTO/index.html" 
      target="_top">Linux Reading List HOWTO</A> that you may find helpful.  The 
      <A class="ulink" href="http://www.catb.org/esr/faqs/loginataka.html" 
      target="_top">Loginataka</A> may also be interesting.</P>
      <P>For an introduction to Python, see the <A class="ulink" href="http://docs.python.org/tutorial/index.html" 
      target="_top">tutorial </A> on the Python site.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="mathematics"></A><A 
      id="idp63252576"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Do I need to be good at math to become a hacker?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>No.  Hacking uses very little formal mathematics or arithmetic. In 
      particular, you won't usually need trigonometry, calculus or analysis 
      (there are exceptions to this in a handful of specific application areas 
      like 3-D computer graphics).  Knowing some formal logic and Boolean 
      algebra is good.  Some grounding in finite mathematics (including 
      finite-set theory, combinatorics, and graph theory) can be helpful.</P>
      <P>Much more importantly: you need to be able to think logically and 
      follow chains of exact reasoning, the way mathematicians do. While the 
      content of most mathematics won't help you, you will need the discipline 
      and intelligence to handle mathematics.  If you lack the intelligence, 
      there is little hope for you as a hacker; if you lack the discipline, 
      you'd better grow it.</P>
      <P>I think a good way to find out if you have what it takes is to pick up 
      a copy of Raymond Smullyan's book <EM class="citetitle">What Is The Name 
      Of This Book?</EM>.  Smullyan's playful logical conundrums are very much 
      in the hacker spirit.  Being able to solve them is a good sign; <SPAN 
      class="emphasis"><EM>enjoying</EM></SPAN> solving them is an even better 
      one.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="language_first"></A><A id="idp63257344"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>What language should I learn first?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>HTML if you don't already know it. There are a lot of glossy, 
      hype-intensive <SPAN class="emphasis"><EM>bad</EM></SPAN> HTML books out 
      there, and distressingly few good ones.  The one I like best is <A class="ulink" 
      href="http://www.oreilly.com/catalog/html5/" target="_top"><EM class="citetitle">HTML: 
      The Definitive Guide</EM></A>.</P>
      <P>But HTML is not a full programming language.  When you're ready to 
      start programming, I would recommend starting with <A class="ulink" href="http://www.python.org/" 
      target="_top">Python</A>.  You will hear a lot of people recommending 
      Perl, but it's harder to learn and (in my opinion) less well designed.</P>
      <P>C is really important, but it's also much more difficult than either
       Python or Perl. Don't try to learn it first.</P>
      <P>Windows users, do <SPAN class="emphasis"><EM>not</EM></SPAN> settle for 
      Visual Basic.  It will teach you bad habits, and it's not portable off
       Windows.  Avoid.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="hardware"></A><A 
id="idp63263488"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>What kind of hardware do I need?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>It used to be that personal computers were rather underpowered and
       memory-poor, enough so that they placed artificial limits on a hacker's
       learning process.  This stopped being true in the mid-1990s; any machine
       from an Intel 486DX50 up is more than powerful enough for development
       work, X, and Internet communications, and the smallest disks you can buy 
      today are plenty big enough.</P>
      <P>The important thing in choosing a machine on which to learn is whether 
      its hardware is Linux-compatible (or BSD-compatible, should you choose to 
      go that route).  Again, this will be true for almost all modern machines. 
      The only really sticky areas are modems and wireless cards; some machines 
      have Windows-specific hardware that won't work with Linux.</P>
      <P>There's a FAQ on hardware compatibility; the latest version is  <A 
      class="ulink" href="http://en.tldp.org/HOWTO/Hardware-HOWTO/index.html" 
      target="_top">here</A>.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="started2"></A><A 
id="idp63267888"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>I want to contribute.  Can you help me pick a problem to work 
  on?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>No, because I don't know your talents or interests.  You have to be 
      self-motivated or you won't stick, which is why having other people choose 
      your direction almost never works.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="MS_hater"></A><A 
id="idp63270320"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Do I need to hate and bash Microsoft?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>No, you don't.  Not that Microsoft isn't loathsome, but there was a
       hacker culture long before Microsoft and there will still be one long 
      after Microsoft is history.  Any energy you spend hating Microsoft would
       be better spent on loving your craft.  Write good code — that will bash 
      Microsoft quite sufficiently without polluting your karma.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="no_living"></A><A 
      id="idp63272864"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>But won't open-source software leave programmers unable to make a 
      living?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>This seems unlikely — so far, the open-source software industry seems 
      to be creating jobs rather than taking them away.  If having a program 
      written is a net economic gain over not having it written, a programmer 
      will get paid whether or not the program is going to be open-source after 
      it's done.  And, no matter how much "free" software gets written, there 
      always seems to be more demand for new and customized applications.  I've 
      written more about this at the <A class="ulink" href="http://www.opensource.org/" 
      target="_top">Open Source</A> pages.</P></TD></TR>
  <TR class="question">
    <TD align="left" valign="top"><A id="problems"></A><A 
id="idp63276224"></A>
      <P><STRONG>Q:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>Where can I get a free Unix?</P></TD></TR>
  <TR class="answer">
    <TD align="left" valign="top">
      <P><STRONG>A:</STRONG></P></TD>
    <TD align="left" valign="top">
      <P>If you don't have a Unix installed on your machine yet, elsewhere on 
      this page I include pointers to where to get the most commonly used free 
      Unix.  To be a hacker you need motivation and initiative and the ability 
      to educate yourself. Start now...</P></TD></TR></TBODY></TABLE></DIV>
<DIV class="mediaobject"><IMG src="How%20To%20Become%20A%20Hacker_files/glider.png"></DIV></DIV></DIV></BODY></HTML>
